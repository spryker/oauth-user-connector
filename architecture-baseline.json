[
    {
        "fileName": "src/Spryker/Zed/OauthUserConnector/Dependency/Facade/OauthUserConnectorToOauthFacadeBridge.php",
        "description": "Bridges: Method `saveScope()` must have `public function [update|create]<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/OauthUserConnector/Dependency/Facade/OauthUserConnectorToOauthFacadeBridge.php",
        "description": "Bridges: Method `findScopeByIdentifier()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/OauthUserConnector/Dependency/Facade/OauthUserConnectorToOauthFacadeBridge.php",
        "description": "Bridges: Method `findClientByIdentifier()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/OauthUserConnector/Dependency/Facade/OauthUserConnectorToOauthFacadeBridge.php",
        "description": "Bridges: Method `getScopesByIdentifiers()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    }
]
